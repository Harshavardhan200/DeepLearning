import numpy as np
from keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Dense
def sieve(n):
    primes = []
    labels = [0 for i in range(n-2)]
    data = [i for i in range(2, n)]
    is_prime = [True] * (n + 1)
    is_prime[0] = is_prime[1] = False

    for i in range(2, n + 1):
        if is_prime[i]:
            primes.append(i)
        for p in primes:
            if i * p > n:
                break
            is_prime[i * p] = False
            if i % p == 0:
                break
    print(primes)
    for i in primes:
        index = data.index(i)
        labels[index] = 1
    return data, labels

data, prime_labels = sieve(10)

training_data = np.array(data[:int(len(data) * 0.8)])
training_labels = np.array(prime_labels[:int(len(prime_labels) * 0.8)])
testing_data = np.array(data[int(len(data) * 0.8):])
testing_labels = np.array(prime_labels[int(len(prime_labels) * 0.8):])


model = Sequential()
model.add(Dense(10, input_shape=(1,), activation='relu'))
model.add(Dense(1, activation='sigmoid'))


model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(training_data, training_labels, epochs=100, batch_size=32)
